@page "/update_user"
@page "/add_edit_user/{UserID:int}"
@using Client11.Models
@using Client11.Services
@inject NavigationManager NavManager
@inject IAppService AppService

<MudPaper Height="800px" Style="overflow:hidden; position:relative;">
    <MudDrawerContainer Class="mud-height-full">
        <MudDrawer Open=true Elevation="0" Variant="@DrawerVariant.Persistent" Style="background: #4b6cb7;  /* fallback for old browsers */
background: -webkit-linear-gradient(to right, #182848, #4b6cb7);  /* Chrome 10-25, Safari 5.1-6 */
background: linear-gradient(to right, #182848, #4b6cb7);
">
           @*  <MudDrawerHeader>
                <MudText Typo="Typo.h6" Class="px-4 text-white ">PC NET</MudText>

            </MudDrawerHeader>
            <MudNavMenu Class="mud-width-full text-white " Style="margin: 0; padding: 0; height:100%;">
                <MudNavLink href="" Icon="@Icons.Material.Filled.Dashboard" IconColor="Color.Info">Dashboard</MudNavLink>

                <MudNavGroup Title="User Details" Icon="@Icons.Material.Filled.AdminPanelSettings" Expanded="true">
                    <MudNavLink href="update_user" Icon="@Icons.Material.Filled.People">Edit User</MudNavLink>
                    <MudNavLink href="weather" Icon="@Icons.Material.Filled.People">Weather</MudNavLink>
                    <MudNavLink href="registrationtable" Icon="@Icons.Material.Filled.People">Registration Table</MudNavLink>

                </MudNavGroup>

                <MudNavGroup Title="Admin Setting" Icon="@Icons.Material.Filled.AdminPanelSettings" Expanded="true">
                    <MudNavLink @onclick="@(()=>logOutUser(UserID))" Icon="@Icons.Material.Filled.Logout">LogOut</MudNavLink>
                </MudNavGroup>
            </MudNavMenu> *@

            <MudDrawerHeader>
                <MudText Typo="Typo.h6" Class="px-4 text-white ">PC NET</MudText>

            </MudDrawerHeader>
            <MudNavMenu Class="mud-width-full text-white " Style="margin: 0; padding: 0; height:100%;">
                <MudNavLink @onclick="@(() => NavigateToDashboard())" Icon="@Icons.Material.Filled.Dashboard" IconColor="Color.Info">Dashboard</MudNavLink>

                <MudNavGroup Title="Product Details" Icon="@Icons.Material.Filled.AppRegistration" Expanded="true">
                    <MudNavLink href="category1" Icon="@Icons.Material.Filled.Category">Category</MudNavLink>
                    <MudNavLink href="products" Icon="@Icons.Material.Filled.ProductionQuantityLimits">Products</MudNavLink>
                    <MudNavLink href="stocks" Icon="@Icons.Material.Filled.WebStories">Stocks</MudNavLink>
                    <MudNavLink href="orders" Icon="@Icons.Material.Filled.Sell">Orders</MudNavLink>
                </MudNavGroup>
                <MudNavGroup Title="Admin Setting" Icon="@Icons.Material.Filled.AdminPanelSettings" Expanded="true">
                    <MudNavLink href="adminRegistration" Icon="@Icons.Material.Filled.Dataset">Add Admin</MudNavLink>
                    <MudNavLink href="adminregistrationtable" Icon="@Icons.Material.Filled.TableChart">Admin Deateils</MudNavLink>
                    <MudNavLink href="weather" Icon="@Icons.Material.Filled.TableChart">User Deateils</MudNavLink>

                    <MudNavLink @onclick="@(()=>logOutUser(adminID))" Icon="@Icons.Material.Filled.Logout">LogOut</MudNavLink>
                </MudNavGroup>
            </MudNavMenu>
        </MudDrawer>
        <MudGrid>
            <MudItem xs="12" sm="12" md="12" lg="12" xl="12" Class="d-flex justify-content-center">
                <MudPaper Class="d-flex flex-column justify-content-center align-items-center mud-width-full py-3"
                          Style="background: #00416A;  /* fallback for old browsers */
                             background: -webkit-linear-gradient(to top, #E4E5E6, #00416A);  /* Chrome 10-25, Safari 5.1-6 */
                             background: linear-gradient(to top, #E4E5E6, #00416A);">
                    <h3 class="text-center">Hii @firstName, Welcome to Pc NET Computers</h3>
                </MudPaper>
            </MudItem>

            <!-- Divide Screen into Two Parts -->
            <MudGrid>
                
                <!-- First Part -->
                <MudItem md="8">
                    <!-- Add content for the first part here -->
                    <div class="form-group" style="padding: 15px;">
                        <label>First Name</label>
                        <input @bind="firstName" class="form-control" placeholder="First Name">
                    </div>
                    <div class="mt-2 form-group" style="padding: 15px;">
                        <label>Last Name</label>
                        <input @bind="lastName" class="form-control" placeholder="Last Name">
                    </div>

                    <div class="mt-2 form-group" style="padding: 15px;">
                        <label>Email address</label>
                        <input @bind="email" type="email" class="form-control" placeholder="Email">
                    </div>

                    <div class="mt-2 form-group" style="padding: 15px;">
                        <label>Gender</label>
                        <div class=" d-flex flex-row">
                            <div class="col-6 d-flex justify-content-between">
                                <div class="form-check">
                                    <input checked="@(gender=="Male")" @onchange="@(()=> setGender("Male"))" class="form-check-input" type="radio" name="flexRadioDefault">
                                    <label class="form-check-label" for="flexRadioDefault1">
                                        Male
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input checked="@(gender=="Female")" @onchange="@(()=> setGender("Female"))" class="form-check-input" type="radio" name="flexRadioDefault">
                                    <label class="form-check-label" for="flexRadioDefault2">
                                        Female
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <button type="submit" @onclick="AddUserRecord" class="mt-2 btn btn-primary text-center">Submit</button>
                </MudItem>

                
            </MudGrid>



        </MudGrid>

    </MudDrawerContainer>
</MudPaper>








@code {
    [Parameter]
    public int UserID { get; set; }
    [Parameter]
    public int adminID { get; set; }
    
    private string firstName;
    private string lastName;
    private string email;
    private string gender;
    
    private void setGender(string gender)
    {
        this.gender = gender;
    }
    protected async override Task OnInitializedAsync()
    {
        if (UserID > 0)
        {
            var response = await AppService.GetUserByID(UserID);
            if (response != null)
            {
                firstName = response.FirstName;
                lastName = response.LastName;
                email = response.Email;
                gender = response.Gender;
            }
        }
    }

    

    private async void AddUserRecord()

    {

        var appServiceModel = new Models.AppServiceModel
            {
                FirstName = firstName,
                LastName = lastName,
                Email = email,
                Gender = gender,
                UserID = UserID
            };

        int response = -1;
        if (UserID > 0)
        {
            response = await AppService.UpdateUser(appServiceModel);
           
        }
        else
        {
            response = await AppService.AddUser(appServiceModel);
            //add record
        }


        if (response > 0)
        {
            firstName = lastName = gender = email = string.Empty;
            this.StateHasChanged();
            await App.Current.MainPage.DisplayAlert("Record Saved",
            "Record Saved To User Table", "OK");
        }
        else
        {
            await App.Current.MainPage.DisplayAlert("Oops",
           "Something went wrong while adding record", "OK");
        }


    }

    private void logOutUser(int UserID)
    {
        NavManager.NavigateTo("/");

    }
    private void NavigateToDashboard()
    {
        NavManager.NavigateTo($"/profile11/{adminID}");
    }
}