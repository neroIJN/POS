
@page "/category_User/{UserID:int}"
@using Client11.Services
@using Client11.Models
@inject ICategoryDataServices1 CategoryDataServices1
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime




<MudPaper Height="800px" Style="overflow:hidden; position:relative;">
    <MudDrawerContainer Class="mud-height-full">
        <MudDrawer Open=true Elevation="0" Variant="@DrawerVariant.Persistent" Style="background: #4b6cb7;  /* fallback for old browsers */
background: -webkit-linear-gradient(to right, #182848, #4b6cb7);  /* Chrome 10-25, Safari 5.1-6 */
background: linear-gradient(to right, #182848, #4b6cb7);
">
            <MudDrawerHeader>
                <MudText Typo="Typo.h6" Class="px-4 text-white ">PC NET</MudText>

            </MudDrawerHeader>
            <MudNavMenu Class="mud-width-full text-white " Style="margin: 0; padding: 0; height:100%;">
                <MudNavLink @onclick="@(() => NavigateToDashboard())" Icon="@Icons.Material.Filled.Dashboard" IconColor="Color.Info">Dashboard</MudNavLink>

                <MudNavGroup Title="Product Details" Icon="@Icons.Material.Filled.AppRegistration" Expanded="true">
                    <MudNavLink href="category1" Icon="@Icons.Material.Filled.Category">Category</MudNavLink>
                    <MudNavLink href="products" Icon="@Icons.Material.Filled.ProductionQuantityLimits">Products</MudNavLink>
                    <MudNavLink href="stocks" Icon="@Icons.Material.Filled.WebStories">Stocks</MudNavLink>
                    <MudNavLink href="orders" Icon="@Icons.Material.Filled.Sell">Orders</MudNavLink>
                </MudNavGroup>
                <MudNavGroup Title="Admin Setting" Icon="@Icons.Material.Filled.AdminPanelSettings" Expanded="true">
                    <MudNavLink href="adminRegistration" Icon="@Icons.Material.Filled.Dataset">Add Admin</MudNavLink>
                    <MudNavLink href="adminregistrationtable" Icon="@Icons.Material.Filled.TableChart">Admin Deateils</MudNavLink>
                    <MudNavLink href="weather" Icon="@Icons.Material.Filled.TableChart">User Deateils</MudNavLink>

                    <MudNavLink @onclick="@(()=>logOutUser())" Icon="@Icons.Material.Filled.Logout">LogOut</MudNavLink>
                </MudNavGroup>
            </MudNavMenu>
        </MudDrawer>
        <MudGrid>
            <MudItem xs="12" sm="12" md="12" lg="12" xl="12" Class="d-flex justify-content-center">
                <MudPaper Class="d-flex flex-column justify-content-center align-items-center mud-width-full py-3"
                          Style="background: #00416A;  /* fallback for old browsers */
                             background: -webkit-linear-gradient(to top, #E4E5E6, #00416A);  /* Chrome 10-25, Safari 5.1-6 */
                             background: linear-gradient(to top, #E4E5E6, #00416A);">
                    <h3 class="text-center">Hii @firstName, Welcome to Pc NET Computers</h3>
                </MudPaper>
            </MudItem>

            <!-- Divide Screen into Two Parts -->

            <MudGrid Style="margin-left: 10px; margin-top: 10px">
                <!-- First Part -->
                <MudItem xs="12" sm="6" md="9" lg="30" xl="30">

                    <!-- Add content for the first part here -->


                    <div class="form-group col-5">
                        <label>Enter Category Name :</label>
                        <input @bind="firstName" class="form-control" placeholder="Category Name" />

                    </div>



                    <div class="text-left">

                        <button type="submit" @onclick=" AddUserRecord" class="mt-2 btn btn-primary">Save</button>

                    </div>
                    
                </MudItem>



            </MudGrid>



        </MudGrid>

    </MudDrawerContainer>
</MudPaper>








@code {
    [Parameter]
    public int UserID { get; set; }
    [Parameter]
    public int adminID { get; set; }
    private string firstName;



    protected async override Task OnInitializedAsync()
    {
        Users = await CategoryDataServices1.GetAllUser();
        if (UserID > 0)
        {
            var response = await CategoryDataServices1.GetUserByID(UserID);

            if (response != null)
            {
                firstName = response.FirstName;

            }
        }
    }



    private async void AddUserRecord()

    {

        var categoryModel1 = new Models.CategoryModel1
            {
                FirstName = firstName,

                UserID = UserID
            };

        int response = -1;
        if (UserID > 0)
        {
            response = await CategoryDataServices1.UpdateUser(categoryModel1);

        }
        else
        {
            response = await CategoryDataServices1.AddUser(categoryModel1);
            //add record
        }


        if (response > 0)
        {
            Users = await CategoryDataServices1.GetAllUser();
            firstName = string.Empty;
            this.StateHasChanged();
            await App.Current.MainPage.DisplayAlert("Record Saved",
            "Record Saved To Category Table", "OK");

        }
        else
        {
            await App.Current.MainPage.DisplayAlert("Oops",
           "Something went wrong while adding record", "OK");
        }


    }




    private List<CategoryModel1> Users;


    private async void DeleteUser(CategoryModel1 user)
    {
        var response = await CategoryDataServices1.DeleteUser(user);
        if (response > 0)
        {
            await OnInitializedAsync();
            this.StateHasChanged();
        }
    }
    private void EditUser(int UserID)
    {
        NavManager.NavigateTo($"/category_User/{UserID}");
    }
    MudMessageBox mbox { get; set; }


    private void OnButtonClicked(CategoryModel1 user)
    {
        mbox.Show();

        //DeleteUser(user);
        StateHasChanged();
    }


    <!--

    private async Task ShowDeleteConfirmation(CategoryModel1 user)
    {
    bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", new object[] { "Are you sure you want to delete this user?" });

    if (confirmed)
    {
    DeleteUser(user);
    }
    }





    -->
    private void logOutUser()
    {
        NavManager.NavigateTo("/");

    }

    private void NavigateToDashboard()
    {
        NavManager.NavigateTo($"/profile11/{adminID}");
    }
}
